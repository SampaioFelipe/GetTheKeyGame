Microsoft (R) Macro Assembler Version 12.00.21005.1	    01/03/17 19:56:15
getTheKey.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 00			Xmargin BYTE ? ; Margem da lateral esquerda usada para centralizar o ambiente do jogo
 00000001 00			CurrentLine BYTE 0 ; Auxilia na contagem de linhas ao desenhar o cenario

 00000002 0000			minMap WORD ? ; Limite minimo do espaco onde o jogador pode se locomover
							  ; Formato (Limite X | Limite Y)
 00000004 0000			maxMap WORD ? ; Limite maximo do espaco onde o jogador pode se locomover
							  ; Formato (Limite X | Limite Y)

 00000006 20 5F 5F 5F 5F	logo1 byte ' ______     ______     ______      ______   __  __     ______        __  __     ______     __  __ ',0dh,0ah,0
	   5F 5F 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 20 20
	   20 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 20 20 5F
	   5F 20 20 5F 5F
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 5F
	   5F 20 20 5F 5F
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 20 20 20
	   20 5F 5F 20 20
	   5F 5F 20 0D 0A
	   00
 0000006B 2F 5C 20 20 5F	logo2 byte '/\  ___\   /\  ___\   /\__  _\    /\__  _\ /\ \_\ \   /\  ___\      /\ \/ /    /\  ___\   /\ \_\ \ ',0dh,0ah,0
	   5F 5F 5C 20 20
	   20 2F 5C 20 20
	   5F 5F 5F 5C 20
	   20 20 2F 5C 5F
	   5F 20 20 5F 5C
	   20 20 20 20 2F
	   5C 5F 5F 20 20
	   5F 5C 20 2F 5C
	   20 5C 5F 5C 20
	   5C 20 20 20 2F
	   5C 20 20 5F 5F
	   5F 5C 20 20 20
	   20 20 20 2F 5C
	   20 5C 2F 20 2F
	   20 20 20 20 2F
	   5C 20 20 5F 5F
	   5F 5C 20 20 20
	   2F 5C 20 5C 5F
	   5C 20 5C 20 0D
	   0A 00
 000000D1 5C 20 5C 20 5C	logo3 byte '\ \ \__ \  \ \  __\   \/_/\ \/    \/_/\ \/ \ \  __ \  \ \  __\      \ \  _"-.  \ \  __\   \ \____ \',0dh,0ah,0
	   5F 5F 20 5C 20
	   20 5C 20 5C 20
	   20 5F 5F 5C 20
	   20 20 5C 2F 5F
	   2F 5C 20 5C 2F
	   20 20 20 20 5C
	   2F 5F 2F 5C 20
	   5C 2F 20 5C 20
	   5C 20 20 5F 5F
	   20 5C 20 20 5C
	   20 5C 20 20 5F
	   5F 5C 20 20 20
	   20 20 20 5C 20
	   5C 20 20 5F 22
	   2D 2E 20 20 5C
	   20 5C 20 20 5F
	   5F 5C 20 20 20
	   5C 20 5C 5F 5F
	   5F 5F 20 5C 0D
	   0A 00
 00000137 20 5C 20 5C 5F	logo4 byte ' \ \_____\  \ \_____\    \ \_\       \ \_\  \ \_\ \_\  \ \_____\     \ \_\ \_\  \ \_____\  \/\_____\ ',0dh,0ah,0
	   5F 5F 5F 5F 5C
	   20 20 5C 20 5C
	   5F 5F 5F 5F 5F
	   5C 20 20 20 20
	   5C 20 5C 5F 5C
	   20 20 20 20 20
	   20 20 5C 20 5C
	   5F 5C 20 20 5C
	   20 5C 5F 5C 20
	   5C 5F 5C 20 20
	   5C 20 5C 5F 5F
	   5F 5F 5F 5C 20
	   20 20 20 20 5C
	   20 5C 5F 5C 20
	   5C 5F 5C 20 20
	   5C 20 5C 5F 5F
	   5F 5F 5F 5C 20
	   20 5C 2F 5C 5F
	   5F 5F 5F 5F 5C
	   20 0D 0A 00
 0000019F 20 20 5C 2F 5F	logo5 byte '  \/_____/   \/_____/     \/_/        \/_/   \/_/\/_/   \/_____/      \/_/\/_/   \/_____/   \/_____/ ',0dh,0ah,0
	   5F 5F 5F 5F 2F
	   20 20 20 5C 2F
	   5F 5F 5F 5F 5F
	   2F 20 20 20 20
	   20 5C 2F 5F 2F
	   20 20 20 20 20
	   20 20 20 5C 2F
	   5F 2F 20 20 20
	   5C 2F 5F 2F 5C
	   2F 5F 2F 20 20
	   20 5C 2F 5F 5F
	   5F 5F 5F 2F 20
	   20 20 20 20 20
	   5C 2F 5F 2F 5C
	   2F 5F 2F 20 20
	   20 5C 2F 5F 5F
	   5F 5F 5F 2F 20
	   20 20 5C 2F 5F
	   5F 5F 5F 5F 2F
	   20 0D 0A 00

 = 00000023			mapHeight = 35
 = 00000062			mapWidth = 98 ; LENGHTOF logo1 = 98

 = 00000D66			BUFSIZE = mapHeight*mapWidth
 00000207  00000D66 [		mapMatrix BYTE BUFSIZE DUP (?)
	    00
	   ]
 00000F6D 6E 69 76 65 6C	mapaFileName BYTE 'nivel1.mapa',0
	   31 2E 6D 61 70
	   61 00

				;Estrutura Player
 00000F79 FE			playerSymbol BYTE 0FEh ; Armazena o caracter que representa o jogador
 00000F7A 00			playerX BYTE ? ; Posicao X do jogador na tela
 00000F7B 00			playerY BYTE ? ; Posicao Y do jogador na tela

 00000000			.code

 00000000			main PROC
 00000000			INICIALIZADOR: ; Configuracoes iniciais
 00000000  E8 00000154			call LoadMapa
 00000005  E8 00000000 E		call ReadChar ; Espera para ajustar a tela, será substituido por outro funçao
 0000000A  E8 00000000 E		call GetMaxXY ; Pega o tamanho do terminal atual para configurar as posicoes na tela
 0000000F  80 EA 65			sub dl, LENGTHOF logo1 
 00000012  D0 EA			shr dl,1
 00000014  88 15 00000000 R		mov Xmargin,dl ; Calcula a magem esquerda em funcao do tamanho da tela e do logo, dessa forma o jogo sempre estará centralizado

 0000001A  E8 0000015E			call DrawLogo ; Desenha o logo do jogo 
 0000001F  E8 00000242			call DrawEnigma ; Desenha o local onde ficara o enigma e o proprio enigma (temos que resolver isso)
 00000024  E8 000002BD			call DrawMapa ; Desenha o mapa do labirinto
 00000029  A0 00000002 R		mov al, BYTE PTR minMap ; Coloca o jogador em uma posicao predefinida no inicio (mudar essa parte em funcao do mapa)
 0000002E  FE C0			inc al
 00000030  A2 00000F7A R		mov playerX, al
 00000035  A0 00000003 R		mov al, BYTE PTR minMap+1
 0000003A  FE C0			inc al
 0000003C  A2 00000F7B R		mov playerY, al
 00000041  E8 000000AF			call DrawPlayer ; Desenha o jogador na tela na posicao configurada
 00000046			MAINLOOP:
 00000046  E8 00000000 E		call ReadKey ; Le do teclado alguma tecla
 0000004B  74 05			jz FIM ; Se nao fou apertada nenhuma tecla, pula para o fim da iteracao atual
 0000004D  E8 00000013			call HandleControl ; Caso contrario e realizada uma acao em funcao da tecla apertada
 00000052			FIM:
 00000052  B8 00000032			mov eax, 50 ; Configura um delay de 50 milisegundos, isso garante que o jogo nao exija muita da cpu de forma desnecessaria e
								; cause bugs na leitura das teclas
 00000057  E8 00000000 E		call delay
 0000005C  EB E8			jmp MAINLOOP ; Executa o loop principal do jogo
				exit
 0000005E  6A 00	   *	    push   +000000000h
 00000060  E8 00000000 E   *	    call   ExitProcess
 00000065			main ENDP

				;---------------------------------------------------
 00000065			HandleControl PROC
				;
				; Gerencia o controle do jogo executando a operacao correta em funcao da tecla apertada
				; Recebe: eax = tecla que foi acionada
				; Retorna: 
				;---------------------------------------------------

 00000065  80 FC 48			cmp ah, 48h ; Verifica se foi a tecla de seta pra cima
 00000068  74 11			je UP
 0000006A  80 FC 50			cmp ah, 50h ; Seta para baixo
 0000006D  74 29			je Down
 0000006F  80 FC 4D			cmp ah, 4dh ; Seta para a direita
 00000072  74 5E			je Right
 00000074  80 FC 4B			cmp ah, 4bh ; Seta para a esquerda
 00000077  74 3C			je Left
 00000079  EB 74			jmp fim ; Se nao foi nenhuma das alternativas, o processo e encerrado
 0000007B			UP:
 0000007B  8A 1D 00000003 R		mov bl, BYTE PTR minMap+1 ; Recupera o valor do limite do mapa
 00000081  FE C3			inc bl
 00000083  38 1D 00000F7B R		cmp playerY, bl ; Se o movimento fizer com que o jogador ultrapasse o limite do mapa, esse movimento nao e realizado
 00000089  74 64			je fim
 0000008B  E8 00000097			call ClearPlayer ; Limpa o antigo local do jogador
 00000090  FE 0D 00000F7B R		dec playerY ; Move o jogador para cima
 00000096  EB 57			jmp fim
 00000098			DOWN:
 00000098  8A 1D 00000005 R		mov bl, BYTE PTR maxMap+1
 0000009E  FE CB			dec bl
 000000A0  38 1D 00000F7B R		cmp playerY, bl
 000000A6  74 47			je fim
 000000A8  E8 0000007A			call ClearPlayer ; Limpa o antigo local do jogador
 000000AD  FE 05 00000F7B R		inc playerY
 000000B3  EB 3A			jmp fim
 000000B5			Left:
 000000B5  8A 1D 00000002 R		mov bl, BYTE PTR minMap
 000000BB  FE C3			inc bl
 000000BD  38 1D 00000F7A R		cmp playerX, bl
 000000C3  74 2A			je fim
 000000C5  E8 0000005D			call ClearPlayer ; Limpa o antigo local do jogador
 000000CA  FE 0D 00000F7A R		dec playerX
 000000D0  EB 1D			jmp fim
 000000D2			Right:
 000000D2  8A 1D 00000004 R		mov bl, BYTE PTR maxMap
 000000D8  FE CB			dec bl
 000000DA  38 1D 00000F7A R		cmp playerX, bl
 000000E0  74 0D			je fim
 000000E2  E8 00000040			call ClearPlayer ; Limpa o antigo local do jogador
 000000E7  FE 05 00000F7A R		inc playerX
 000000ED  EB 00			jmp fim
 000000EF			Fim:
 000000EF  E8 00000001			call DrawPlayer ; Desenha o jogador na nova posicao
 000000F4  C3	ret
 000000F5			HandleControl ENDP

				;---------------------------------------------------	
 000000F5			DrawPlayer PROC
				;
				; Desenha na tela o jogador em sua posicao atual
				; Recebe: Nada
				; Retorna: Nada
				;---------------------------------------------------	
 000000F5  E8 00000000 E		call GetTextColor
 000000FA  50			    push eax

 000000FB  8A 15 00000F7A R		mov dl, playerX
 00000101  8A 35 00000F7B R		mov dh, playerY
 00000107  E8 00000000 E		call GoToxy

 0000010C  B8 0000000B			mov eax,lightcyan
 00000111  E8 00000000 E		call settextcolor
 00000116  A0 00000F79 R		mov al, playerSymbol
 0000011B  E8 00000000 E		call WriteChar

 00000120  58				pop eax
 00000121  E8 00000000 E		call settextcolor

 00000126  C3				ret
 00000127			DrawPlayer ENDP

				;---------------------------------------------------	
 00000127			ClearPlayer PROC
				;
				; Limpa a posicao antiga do jogador, evita que forme um rastro na tela devido ao movimento do jogador
				; Recebe: Nada
				; Retorna: Nada
				;---------------------------------------------------
 00000127  E8 00000000 E		call GetTextColor
 0000012C  50			    push eax

 0000012D  8A 15 00000F7A R		mov dl, playerX
 00000133  8A 35 00000F7B R		mov dh, playerY
 00000139  E8 00000000 E		call GoToxy

 0000013E  B8 00000000			mov eax,black
 00000143  E8 00000000 E		call settextcolor
 00000148  A0 00000F79 R		mov al, playerSymbol
 0000014D  E8 00000000 E		call WriteChar

 00000152  58				pop eax
 00000153  E8 00000000 E		call settextcolor
 00000158  C3				ret
 00000159			ClearPlayer ENDP

				;---------------------------------------------------
 00000159			LoadMapa PROC
				;
				; Carrega na memoria um mapa (precisamos pensar nesse procidemento)
				; Recebe: ? 
				; Retorna: ?
				;---------------------------------------------------
 00000159  BA 00000F6D R		mov edx, OFFSET mapaFileName
 0000015E  E8 00000000 E		call OpenInputFile

					;mov  eax,fileHandle
 00000163  BA 00000207 R	    mov  edx,OFFSET mapMatrix
 00000168  B9 00000D66		    mov  ecx,BUFSIZE
 0000016D  E8 00000000 E	    call ReadFromFile
				    ;jc   show_error_message
				    ;mov  bytesRead,eax

 00000172  BA 00000207 R		mov edx, OFFSET mapMatrix
 00000177  E8 00000000 E		call WriteString
 0000017C  C3				ret
 0000017D			LoadMapa ENDP

				;---------------------------------------------------
 0000017D			DrawLogo PROC
				;
				; Desenha na tela o logo do jogo
				; Recebe: ? 
				; Retorna: ?
				;---------------------------------------------------
 0000017D  E8 00000000 E		call GetTextColor
 00000182  50			    push eax
					
 00000183  B8 00000000			mov eax,0
 00000188  B8 00000009			mov eax,lightblue
 0000018D  E8 00000000 E		call settextcolor

 00000192  8A 15 00000000 R		mov dl, Xmargin
 00000198  8A 35 00000001 R		mov dh,CurrentLine
 0000019E  FE 05 00000001 R		inc CurrentLine
 000001A4  E8 00000000 E		call GoToxy
 000001A9  BA 00000006 R		mov edx, offset logo1
 000001AE  E8 00000000 E		call writestring

 000001B3  B8 00000009			mov eax,lightblue
 000001B8  E8 00000000 E		call settextcolor

 000001BD  8A 15 00000000 R		mov dl, Xmargin
 000001C3  8A 35 00000001 R		mov dh,CurrentLine
 000001C9  FE 05 00000001 R		inc CurrentLine
 000001CF  E8 00000000 E		call GoToxy
 000001D4  BA 0000006B R		mov edx, offset logo2
 000001D9  E8 00000000 E		call writestring

 000001DE  B8 0000000B			mov eax,lightcyan
 000001E3  E8 00000000 E		call settextcolor

 000001E8  8A 15 00000000 R		mov dl, Xmargin
 000001EE  8A 35 00000001 R		mov dh,CurrentLine
 000001F4  FE 05 00000001 R		inc CurrentLine
 000001FA  E8 00000000 E		call GoToxy
 000001FF  BA 000000D1 R		mov edx, offset logo3
 00000204  E8 00000000 E		call writestring

 00000209  B8 0000000A			mov eax,lightgreen
 0000020E  E8 00000000 E		call settextcolor

 00000213  8A 15 00000000 R		mov dl, Xmargin
 00000219  8A 35 00000001 R		mov dh,CurrentLine
 0000021F  FE 05 00000001 R		inc CurrentLine
 00000225  E8 00000000 E		call GoToxy
 0000022A  BA 00000137 R		mov edx, offset logo4
 0000022F  E8 00000000 E		call writestring

 00000234  B8 00000003			mov eax,cyan
 00000239  E8 00000000 E		call settextcolor

 0000023E  8A 15 00000000 R		mov dl, Xmargin
 00000244  8A 35 00000001 R		mov dh,CurrentLine
 0000024A  FE 05 00000001 R		inc CurrentLine
 00000250  E8 00000000 E		call GoToxy
 00000255  BA 0000019F R		mov edx, offset logo5
 0000025A  E8 00000000 E		call writestring

 0000025F  58				pop eax
 00000260  E8 00000000 E		call settextcolor

 00000265  C3				ret
 00000266			DrawLogo ENDP

				;---------------------------------------------------
 00000266			DrawEnigma PROC
				;
				; Desenha na tela o local enigma e o enigma propriamente dito
				; Recebe: ? 
				; Retorna: ?
				;---------------------------------------------------
 00000266  B0 2B			mov al, '+'
 00000268  B9 00000065			mov ecx, LENGTHOF logo1
 0000026D  FE 05 00000001 R		inc CurrentLine
 00000273  8A 15 00000000 R		mov dl,Xmargin
 00000279  8A 35 00000001 R		mov dh,CurrentLine
 0000027F  FE 05 00000001 R		inc CurrentLine
 00000285  E8 00000000 E		call GoToxy 
 0000028A			L1:
 0000028A  E8 00000000 E		call WriteChar
 0000028F  E2 F9			loop L1

 00000291  8A 15 00000000 R		mov dl,Xmargin
 00000297  8A 35 00000001 R		mov dh,CurrentLine
 0000029D  FE 05 00000001 R		inc CurrentLine
 000002A3  E8 00000000 E		call GoToxy
 000002A8  B9 00000063			mov ecx, LENGTHOF logo1 - 2
 000002AD  E8 00000000 E		call WriteChar
 000002B2  B0 20			mov al, ' '
 000002B4			L2:
 000002B4  E8 00000000 E		call WriteChar
 000002B9  E2 F9			loop L2

 000002BB  B0 2B			mov al, '+'
 000002BD  E8 00000000 E		call WriteChar

 000002C2  B9 00000065			mov ecx, LENGTHOF logo1
 000002C7  8A 15 00000000 R		mov dl,Xmargin
 000002CD  8A 35 00000001 R		mov dh,CurrentLine
 000002D3  FE 05 00000001 R		inc CurrentLine
 000002D9  E8 00000000 E		call GoToxy 
 000002DE			L3:
 000002DE  E8 00000000 E		call WriteChar
 000002E3  E2 F9			loop L3
 000002E5  C3				ret
 000002E6			DrawEnigma ENDP

				;---------------------------------------------------
 000002E6			DrawMapa PROC
				;
				; Desenha na tela o mapa do labirinto
				; Recebe: ? 
				; Retorna: ?
				;---------------------------------------------------
 000002E6  B0 FE			mov al, 0feh
 000002E8  B9 00000064			mov ecx, mapWidth + 2
 000002ED  FE 05 00000001 R		inc CurrentLine
 000002F3  8A 15 00000000 R		mov dl,Xmargin
 000002F9  8A 35 00000001 R		mov dh,CurrentLine
 000002FF  66| 89 15			mov minMap,dx
	   00000002 R
 00000306  FE 05 00000001 R		inc CurrentLine
 0000030C  E8 00000000 E		call GoToxy
 00000311			L1:
 00000311  E8 00000000 E		call WriteChar
 00000316  E2 F9			loop L1

 00000318  B0 DB			mov al, 0dbh
 0000031A  B9 00000023			mov ecx, mapHeight
 0000031F			L2:
 0000031F  8A 15 00000002 R		mov dl, BYTE PTR minMap
 00000325  8A 35 00000001 R		mov dh, CurrentLine
 0000032B  E8 00000000 E		call GoToxy
 00000330  E8 00000000 E		call WriteChar
 00000335  80 C2 63			add dl, mapWidth + 1
 00000338  E8 00000000 E		call GoToxy
 0000033D  E8 00000000 E		call WriteChar
 00000342  FE 05 00000001 R		inc CurrentLine
 00000348  E2 D5			loop L2

 0000034A  B0 FE			mov al, 0feh
 0000034C  B9 00000064			mov ecx, mapWidth + 2
 00000351  8A 15 00000000 R		mov dl,Xmargin
 00000357  8A 35 00000001 R		mov dh,CurrentLine
 0000035D  E8 00000000 E		call GoToxy
 00000362			L3:
 00000362  E8 00000000 E		call WriteChar
 00000367  E2 F9			loop L3

 00000369  8A 15 00000000 R		mov dl, Xmargin
 0000036F  80 C2 63			add dl, mapWidth + 1
 00000372  66| 89 15			mov maxMap,dx
	   00000004 R
 00000379  C3				ret
 0000037A			DrawMapa ENDP

				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    01/03/17 19:56:15
getTheKey.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000F7C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000037A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ClearPlayer  . . . . . . . . . .	P Near	 00000127 _TEXT	Length= 00000032 Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawEnigma . . . . . . . . . . .	P Near	 00000266 _TEXT	Length= 00000080 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000028A _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000002B4 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000002DE _TEXT	
DrawLogo . . . . . . . . . . . .	P Near	 0000017D _TEXT	Length= 000000E9 Public STDCALL
DrawMapa . . . . . . . . . . . .	P Near	 000002E6 _TEXT	Length= 00000094 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000311 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000031F _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000362 _TEXT	
DrawPlayer . . . . . . . . . . .	P Near	 000000F5 _TEXT	Length= 00000032 Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HandleControl  . . . . . . . . .	P Near	 00000065 _TEXT	Length= 00000090 Public STDCALL
  UP . . . . . . . . . . . . . .	L Near	 0000007B _TEXT	
  DOWN . . . . . . . . . . . . .	L Near	 00000098 _TEXT	
  Left . . . . . . . . . . . . .	L Near	 000000B5 _TEXT	
  Right  . . . . . . . . . . . .	L Near	 000000D2 _TEXT	
  Fim  . . . . . . . . . . . . .	L Near	 000000EF _TEXT	
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadMapa . . . . . . . . . . . .	P Near	 00000159 _TEXT	Length= 00000024 Public STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000065 Public STDCALL
  INICIALIZADOR  . . . . . . . .	L Near	 00000000 _TEXT	
  MAINLOOP . . . . . . . . . . .	L Near	 00000046 _TEXT	
  FIM  . . . . . . . . . . . . .	L Near	 00000052 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFSIZE  . . . . . . . . . . . .	Number	 00000D66h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CurrentLine  . . . . . . . . . .	Byte	 00000001 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
Xmargin  . . . . . . . . . . . .	Byte	 00000000 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
logo1  . . . . . . . . . . . . .	Byte	 00000006 _DATA	
logo2  . . . . . . . . . . . . .	Byte	 0000006B _DATA	
logo3  . . . . . . . . . . . . .	Byte	 000000D1 _DATA	
logo4  . . . . . . . . . . . . .	Byte	 00000137 _DATA	
logo5  . . . . . . . . . . . . .	Byte	 0000019F _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
mapHeight  . . . . . . . . . . .	Number	 00000023h   
mapMatrix  . . . . . . . . . . .	Byte	 00000207 _DATA	
mapWidth . . . . . . . . . . . .	Number	 00000062h   
mapaFileName . . . . . . . . . .	Byte	 00000F6D _DATA	
maxMap . . . . . . . . . . . . .	Word	 00000004 _DATA	
minMap . . . . . . . . . . . . .	Word	 00000002 _DATA	
playerSymbol . . . . . . . . . .	Byte	 00000F79 _DATA	
playerX  . . . . . . . . . . . .	Byte	 00000F7A _DATA	
playerY  . . . . . . . . . . . .	Byte	 00000F7B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
